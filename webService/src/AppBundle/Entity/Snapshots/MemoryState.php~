<?php
// src/AppBundle/Entity/Snapshots/MemoryState.php
namespace AppBundle\Entity\Snapshots;
use Doctrine\ORM\Mapping as ORM;
/**
 * Created by PhpStorm.
 * User: allonzo
 * Date: 22/11/16
 * Time: 08:28
 */
/**
 * @ORM\Entity
 * @ORM\Table(name="memoryState")
 * l'état de la mémoire a un instant T, contient le détail(PGA,SDA ...)
 */
class MemoryState
{
    /**
     *  @ORM\Id
     *  @ORM\Column(type="integer")
     *  @ORM\GeneratedValue
     */
    private $id;

    /**
     *  @ORM\Column(type="float")
     **/
    private $usagePercent;
    /**
     *  @ORM\Column(type="float")
     **/
    private $requestExecutedMoreThanOnce;
    /**
     *  @ORM\Column(type="float")
     **/
    private $memUseForRequestExecutedMoreThanOnce;


    /**
     * Get id
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set usagePercent
     *
     * @param float $usagePercent
     *
     * @return MemoryState
     */
    public function setUsagePercent($usagePercent)
    {
        $this->usagePercent = $usagePercent;

        return $this;
    }

    /**
     * Get usagePercent
     *
     * @return float
     */
    public function getUsagePercent()
    {
        return $this->usagePercent;
    }

    /**
     * Set requestExecutedMoreThanOnce
     *
     * @param float $requestExecutedMoreThanOnce
     *
     * @return MemoryState
     */
    public function setRequestExecutedMoreThanOnce($requestExecutedMoreThanOnce)
    {
        $this->requestExecutedMoreThanOnce = $requestExecutedMoreThanOnce;

        return $this;
    }

    /**
     * Get requestExecutedMoreThanOnce
     *
     * @return float
     */
    public function getRequestExecutedMoreThanOnce()
    {
        return $this->requestExecutedMoreThanOnce;
    }

    /**
     * Set memUseForRequestExecutedMoreThanOnce
     *
     * @param float $memUseForRequestExecutedMoreThanOnce
     *
     * @return MemoryState
     */
    public function setMemUseForRequestExecutedMoreThanOnce($memUseForRequestExecutedMoreThanOnce)
    {
        $this->memUseForRequestExecutedMoreThanOnce = $memUseForRequestExecutedMoreThanOnce;

        return $this;
    }

    /**
     * Get memUseForRequestExecutedMoreThanOnce
     *
     * @return float
     */
    public function getMemUseForRequestExecutedMoreThanOnce()
    {
        return $this->memUseForRequestExecutedMoreThanOnce;
    }
}
